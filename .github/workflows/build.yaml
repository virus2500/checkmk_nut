name: build

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:

jobs:
  build_package:
    name: Build Checkmk package
    runs-on: ubuntu-latest
    container:
      image: ${{ vars.CHECK_MK_IMAGE }}

    env:
      OMD_ROOT: /omd/sites/cmk
      OMD_SITE: cmk
      CMK_SITE_ID: cmk
      WORKSPACE: ${{ github.workspace }}

    steps:
      - name: Initialize Checkmk Site
        run: /docker-entrypoint.sh /bin/true

      - uses: actions/checkout@v2

      - name: Setup links
        run: .devcontainer/symlink.sh

      - name: Update GITHUB_PATH
        run: echo "/omd/sites/cmk/bin" >> $GITHUB_PATH

      - name: Build Extension
        run: .devcontainer/build.sh
        id: cmkpkg

      - name: Debug package outputs
        run: |
          echo "PKGFILE: ${{ steps.cmkpkg.outputs.pkgfile }}"
          echo "PKGNAME: ${{ steps.cmkpkg.outputs.pkgname }}"
          echo "PKGVERSION: ${{ steps.cmkpkg.outputs.pkgversion }}"

      #- name: Get Current Date for Body (optional)
      #  id: get_current_date
      #  run: echo "date=$(date +'%Y-%m-%d %H:%M:%S %Z')" >> "$GITHUB_OUTPUT"

      #- name: Install Node 18 via NodeSource
      #  run: |
      #    # 1) Remove any existing Node 12 packages that conflict
      #    apt-get update -y
      #    apt-get remove -y nodejs libnode-dev || true
      #    apt-get autoremove -y

      #    # 2) Install curl/gnupg so we can fetch the NodeSource script
      #    apt-get install -y curl ca-certificates gnupg

      #    # 3) Add NodeSourceâ€™s Node 18 repo and install nodejs
      #    curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
      #    apt-get install -y nodejs


      #- name: Check Node version
      #  run: node --version

      - name: Confirm MKP file exists
        run: ls -l ${{ steps.cmkpkg.outputs.pkgfile }}

      - name: Upload mkp artifact
        uses: ${{ github.server_url == 'https://github.com' && 'actions/upload-artifact@v4' || 'actions/upload-artifact@v3' }}
        with:
          name: ${{ steps.cmkpkg.outputs.pkgfile }}
          path: ${{ steps.cmkpkg.outputs.pkgfile }}

#      - name: Upload artifact (GitHub only)
#        if: startsWith(github.server_url, 'https://github.com')
#        uses: actions/upload-artifact@v4
#        with:
#          name: built-mkp-artifact
#          path: ${{ steps.cmkpkg.outputs.pkgfile }}
#
#      - name: Upload artifact (Gitea only)
#        if: ${{ !startsWith(github.server_url, 'https://github.com') }}
#        uses: actions/upload-artifact@v3
#        with:
#          name: built-mkp-artifact
#          path: ${{ steps.cmkpkg.outputs.pkgfile }}
#
#
#  upload_to_github:
#    name: Upload to GitHub
#    runs-on: ubuntu-latest
#    needs: build_package
#    if: ${{ startsWith(github.server_url, 'https://github.com') }}
#
#    steps:
#      - name: Download built mkp artifact
#        # Use v4 for download on GitHub as GitHub's runners support it
#        uses: actions/download-artifact@v4
#        with:
#          name: built-mkp-artifact
#          path: . # Download to the current directory
#
#      - name: Get artifact filename
#        id: get_pkg_name
#        run: |
#          echo "pkgfile=$(ls *.mkp | head -n 1)" >> "$GITHUB_OUTPUT"
#
#      - name: Upload mkp artifact (GitHub)
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ steps.get_pkg_name.outputs.pkgfile }}
#          path: ${{ steps.get_pkg_name.outputs.pkgfile }}
#
#  upload_to_gitea:
#    name: Upload to Gitea
#    container:
#      image: gitea.home.lan/mkronika/ubuntu2404:latest
#    runs-on: self-hosted
#    needs: build_package
#    if: ${{ !startsWith(github.server_url, 'https://github.com') }}
#
#    steps:
#      - name: Download built mkp artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: built-mkp-artifact
#          path: . # Download to the current directory
#
#      - name: Get artifact filename
#        id: get_pkg_name
#        run: |
#          echo "pkgfile=$(ls *.mkp | head -n 1)" >> "$GITHUB_OUTPUT"
#
#      - name: Upload mkp artifact (Gitea)
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ steps.get_pkg_name.outputs.pkgfile }}
#          path: ${{ steps.get_pkg_name.outputs.pkgfile }}
